#pragma warning(disable:4996)
#include <stdio.h>

/*
	[ scanf 추가 내용 ]
	사용자가 콘솔 창에서 값을 입력하고 엔터키를 누르면
	키보드 버퍼라는 입력 저장공간에 \n 즉, 줄바꿈문자가
	입력된다. 원래 scanf의 동작은 키보드 버퍼에 입력된
	줄바꿈문자를 제거하는 것까지인데, scanf가 컴퓨터에
	따라서 제대로 줄바꿈문자를 제거하지 못할 수 있다.
	이렇게 되면 키보드 버퍼에 계속해서 줄바꿈문자가
	남아있게 되어, 다음 코드에 scanf가 또 등장할 경우
	scanf는 이미 사용자가 값을 입력하고 엔터키를
	눌렀다고 파악한다. 따라서 값을 입력받지 못하고
	그냥 넘어가게 된다. 이를 해결하려면
	키보드 버퍼에 있는 줄바꿈문자를 강제로 꺼내는
	수밖에 없다.
	
	getchar();  : 키보드 버퍼에 있는 문자 1개를 읽어서
	그대로 반환하는 기능.
	=> while( getchar() != '\n' );
	키보드 버퍼에 들어있는 문자값이 줄바꿈문자가 아닐 때까지
	반복하여 키보드 버퍼에서 문자를 한 개씩 뺌.
*/


/*
	[ 참과 거짓 ]
	거짓: 0
	참   :  0이 아닌 모든 수.
	C/C++에서는 참을 1로 통일해서 표현하고, 거짓을 0으로 통일해서 표현.

	[ 비교 연산자 ]
	연산의 결과로 참 또는 거짓을 돌려주는 연산자.
	<		: 오른쪽의 값이 왼쪽의 값보다 크다면 결과가 참.
	>	   
	<=   : 오른쪽의 값이 왼쪽의 값보다 크거나 같다면 결과가 참.
	>=
	==   : 양 쪽의 값이 동일하다면 결과가 참.
	!=    : !(not) =(equal), 양 쪽의 값이 같지 않을 때 결과가 참.

	[ 논리 연산자 ]
	연산의 결과로 참 또는 거짓을 돌려주는 연산자.
	&&  : and, && 양 쪽에 위치한 값들이 모두 참일 때 최종 결과가 참.
	ex) 1 && 0;		//거짓
		  1 0 && 20; //참

	||     : or, 양 쪽에 위치한 값들 중 하나라도 참이면 최종결과가 참.
	ex) 0 || 100;					//석주, 참
		  100%2 || 2%3;		//원재, 참
		  0 || 0;						//거짓

	!      : not, 부정, 참이면 거짓, 거짓이면 참으로 결과를 내는 연산자.
	ex) ! 0; //참
		  !!0;//거짓


	 [ 반복문 ]
	 C에서는 3가지, C++에서는 5가지가 제공된다.
	 특정한 코드를 원하는 만큼 반복해서 실행해주는 문법.

	 while)

	 초기문;					//어디서부터 반복할지를 결정해주는 코드.
	 while ( 조건문 )     //언제까지 반복할지를 결정해주는 코드.
	 {
		반복할 코드;
		증감문;					//어떻게 반복할지를 결정해주는 코드.
	 }



	 for)

	 for ( 초기문;  조건문;  증감문 )
	 {
		반복할 코드;
	 }

	 초기문 -> 조건문 검사(참이면) -> { } 실행 -> 증감문 
	 -> 조건문 검사(거짓이면) -> 반복 종료


	 do~while)
	 
	 초기문;
	 do
	 {
		반복할 코드;
		증감문;
	 } while ( 조건문 );

	 while은 먼저 조건을 검사하고 반복하는 반면, do~while은
	 무조건 한 번은 do 문을 실행하고, 조건을 나중에 검사한다.

	 초기문 -> do { } -> 조건문(결과가 참이면) -> do { } -> 
	 조건문(결과가 거짓이면) -> 반복 종료.
*/

int main()
{
	//int number = 1;
	//while (number <= 100)
	//{
	//	printf("%d ", number);
	//	++number;
	//}

	//++number;//원본의 값을 바로 바꿈.
	//number++;//원본과 똑같은 메모리를 복사하여 현재 줄에 등장시키고,
					      //다음줄에서 원본의 값을 증가.

	//for (int number = 1; number <= 100; ++number)
	//{
	//	printf("%d ", number);
	//}
	////printf("abc");


	int number = 1;
	do
	{
		printf("%d ", number);
		++number;
	} while (number <= 100);

	return 0;
}

//int main()
//{
//	int age;
//	printf("나이: ");
//	scanf("%d", &age);
//
//	while (getchar() != '\n');
//	
//	char bloodType;
//	printf("혈액형: ");
//	scanf("%c", &bloodType);
//
//	return 0;
//}
